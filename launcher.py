import tkinter as tk # –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (GUI), –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç tkinter, –≤ —Å–≤–æ–µ–º –∫–æ–¥–µ, –æ–±—Ä–∞—â–∞—è—Å—å –∫ –Ω–∏–º —á–µ—Ä–µ–∑ –∏–º—è tk.
from tkinter import messagebox, PhotoImage # –û–Ω –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏–∞–ª–æ–≥–æ–≤—ã–º–∏ –æ–∫–Ω–∞–º–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤ GUI (–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –ø—Ä–æ–≥—Ä–∞–º–º.
from PIL import Image, ImageTk, __version__ as PILLOW_VERSION
import webbrowser # –î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è URL
import subprocess
import sys # –î–ª—è –∑–∞–ø—É—Å–∫–∞ –¥–æ–ø–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
import os

# --- –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –∏ —à—Ä–∏—Ñ—Ç—ã (–≤ —Å—Ç–∏–ª–µ Steam) ---
BG_COLOR = "#1b2838"  # –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π —Ñ–æ–Ω, –∫–∞–∫ —É Steam
FRAME_BG_COLOR = "#2a3f54" # –ß—É—Ç—å —Å–≤–µ—Ç–ª–µ–µ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Ä–∞–º–æ–∫
TEXT_COLOR = "#c7d5e0"  # –°–≤–µ—Ç–ª–æ-–≥–æ–ª—É–±–æ–≤–∞—Ç–æ-—Å–µ—Ä—ã–π —Ç–µ–∫—Å—Ç
ACCENT_COLOR = "#66c0f4" # –Ø—Ä–∫–∏–π –≥–æ–ª—É–±–æ–π –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–æ–≤
EXIT_BUTTON_BG_COLOR = "#c94c4c" # –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
BUTTON_BG_COLOR = "#4a6e8a" # –¢–µ–º–Ω–µ–µ —Å–∏–Ω–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
BUTTON_FG_COLOR = TEXT_COLOR
SUPPORT_BUTTON_BG_COLOR = "#556b2f" # –ü—Ä–∏–º–µ—Ä: –æ–ª–∏–≤–∫–æ–≤–æ-–∑–µ–ª–µ–Ω—ã–π –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
ABOUT_BUTTON_BG_COLOR = "#4f5b62"   # –ü—Ä–∏–º–µ—Ä: —Å–µ—Ä–æ-—Å–∏–Ω–∏–π –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ"
BUTTON_ACTIVE_BG_COLOR = "#5e8bb0" # –¶–≤–µ—Ç –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏/–Ω–∞–∂–∞—Ç–∏–∏

FONT_FAMILY_MAIN = "Segoe UI" # –ò–ª–∏ "Arial", "Calibri"
FONT_SIZE_NORMAL = 10
FONT_SIZE_MEDIUM = 12
FONT_SIZE_LARGE = 16
FONT_BOLD = "bold" 

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–≥—Ä ---
GAMES = [
    {
        "name": "Trips-traps-trull", # –£—Ç–æ—á–Ω–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ –∏–≥—Ä–∞ reak.py
        "path": "..\\oleg2007\\csripts or game\\reak.py", # –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å, –µ—Å–ª–∏ reak.py –≤ C:\oleg2007
        "description": """üéÆ –¢–µ—Å—Ç –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é!
–ú–∏–Ω–∏-–∏–≥—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–µ–∞–∫—Ü–∏–∏. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ —Å–∏–≥–Ω–∞–ª–∞.

üèÜ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: —É—Ä–æ–≤–Ω–∏, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –º–∏–Ω–∏–º–∞–ª–∏–∑–º.
–¢—Ä–µ–Ω–∏—Ä—É–µ—Ç —Ä–µ–∞–∫—Ü–∏—é, –≤–Ω–∏–º–∞–Ω–∏–µ. –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è —É–º–∞!""",
        "cover_path": "..\\oleg2007\\image\\AIM.jpg" # –≠—Ç–æ—Ç –ø—É—Ç—å —É–∂–µ –±—ã–ª –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º
    },
    {
        "name": "Guess number",
        "path": "..\\oleg2007\\csripts or game\\guess.py", # –ò—Å–ø–æ–ª—å–∑—É–µ–º raw string
        "description": """üî¢ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ!
–ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å –µ–≥–æ –∑–∞ –Ω–∞–∏–º–µ–Ω—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫!""",
        "cover_path": "..\\oleg2007\\image\\chis.jpg"
    },
{
        "name": "Snake",
        "path": "..\\csripts or game\\sneak.py", # –ò—Å–ø–æ–ª—å–∑—É–µ–º raw string
        "description": """üêç –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ '–ó–º–µ–π–∫–∞'.
–£–ø—Ä–∞–≤–ª—è–π –∑–º–µ–π–∫–æ–π, —Å–æ–±–∏—Ä–∞–π –µ–¥—É –∏ —Ä–∞—Å—Ç–∏. –ù–µ –≤—Ä–µ–∑–∞–π—Å—è –≤ —Å–µ–±—è –∏–ª–∏ —Å—Ç–µ–Ω—ã!""",
        "cover_path": "..\\oleg2007\\image\\snake.jpg"
    },
{
        "name": "Simon",
        "path": "..\\.\\oleg2007\\csripts or game\\simon.py",
        "description": """üß† Simon: –∏–≥—Ä–∞ –Ω–∞ –ø–∞–º—è—Ç—å.
–ü–æ–≤—Ç–æ—Ä—è–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–≤–µ—Ç–æ–≤.

–†–∞–∑–≤–∏–≤–∞–µ—Ç –ø–∞–º—è—Ç—å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ. –ï—Å—Ç—å —É—Ä–æ–≤–Ω–∏ –∏ –∑–≤—É–∫–∏.""",
        "cover_path": "..\\oleg2007\\image\\simon.jpg"
    },
    {
        "name": "Flappy Bird",
        "path": "..\\oleg2007\\csripts or game\\gamesam.py", # –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å, –µ—Å–ª–∏ –æ–Ω –¥—Ä—É–≥–æ–π
        "description": """üê¶ Flappy Bird!
–£–ø—Ä–∞–≤–ª—è–π –ø—Ç–∏—á–∫–æ–π, –ø—Ä–æ–ª–µ—Ç–∞—è –º–µ–∂–¥—É —Ç—Ä—É–±–∞–º–∏. –ù–∞–±–µ—Ä–∏ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –æ—á–∫–æ–≤!
–ü—Ä–æ—Å—Ç–æ –∫–ª–∏–∫–∞–π, —á—Ç–æ–±—ã –ø—Ç–∏—á–∫–∞ –≤–∑–ª–µ—Ç–∞–ª–∞.""",
        "cover_path": "..\\oleg2007\\image\\flapy.jpg" # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –æ–±–ª–æ–∂–∫–µ –∏–ª–∏ None
    },
]


class GameLauncherApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Steam")
        self.root.geometry("800x550") # –ù–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–º –æ–∫–Ω–æ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–∏–¥–∞
        self.root.configure(bg=BG_COLOR)

        # --- –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ ---
        self.button_style = {
            "font": (FONT_FAMILY_MAIN, FONT_SIZE_NORMAL),
            "bg": BUTTON_BG_COLOR,
            "fg": BUTTON_FG_COLOR,
            "activebackground": BUTTON_ACTIVE_BG_COLOR,
            "activeforeground": TEXT_COLOR,
            "relief": "flat",
            "borderwidth": 0, # –®–∏—Ä–∏–Ω–∞ —Ä–∞–º–∫–∏
            "width": 22, # –£–º–µ–Ω—å—à–∏–ª–∏ —à–∏—Ä–∏–Ω—É –∫–Ω–æ–ø–∫–∏ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä
            "anchor": "w",
            "padx": 10,
            "compound": tk.LEFT, # –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ —Å–ª–µ–≤–∞ –æ—Ç —Ç–µ–∫—Å—Ç–∞
        }
        self.launch_button_style = self.button_style.copy()
        self.launch_button_style.update({
            "font": (FONT_FAMILY_MAIN, FONT_SIZE_MEDIUM, FONT_BOLD),
            "bg": ACCENT_COLOR,
            "fg": "#FFFFFF", # –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —è—Ä–∫–æ–π –∫–Ω–æ–ø–∫–µ
            "activebackground": "#55b0e4", # –ß—É—Ç—å —Ç–µ–º–Ω–µ–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            "width": 20,
            "anchor": "center",
        })
        self.exit_button_style = self.button_style.copy()
        self.exit_button_style.update({
            "bg": EXIT_BUTTON_BG_COLOR,
            "activebackground": "#4b1f1f", # –¢–µ–º–Ω–µ–µ –∫—Ä–∞—Å–Ω—ã–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            "fg": "#FFFFFF",
            "font": (FONT_FAMILY_MAIN, FONT_SIZE_NORMAL, FONT_BOLD),
            "anchor": "center", # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ –≤—ã—Ö–æ–¥–∞
        })
        self.support_button_style = self.button_style.copy()
        self.support_button_style.update({
            "bg": SUPPORT_BUTTON_BG_COLOR, # –ù–æ–≤—ã–π —Ü–≤–µ—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
            "activebackground": "#38441F", # –ß—É—Ç—å —Å–≤–µ—Ç–ª–µ–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            "fg": "#FFFFFF",
            "anchor": "center",
        })
        self.about_button_style = self.button_style.copy()
        self.about_button_style.update({
            "bg": ABOUT_BUTTON_BG_COLOR,
            "activebackground": "#3e4a52", # –¢–µ–º–Ω–µ–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            "fg": "#FFFFFF",
            "font": (FONT_FAMILY_MAIN, FONT_SIZE_NORMAL, FONT_BOLD),
            "anchor": "center",
        })



        # –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ø–∏—Å–æ–∫ –∏–≥—Ä –∏ –ø–∞–Ω–µ–ª—å –¥–µ—Ç–∞–ª–µ–π
        main_frame = tk.Frame(root, bg=BG_COLOR)
        main_frame.pack(fill="both", expand=True, padx=10, pady=10)

        # –õ–µ–≤—ã–π —Ñ—Ä–µ–π–º –¥–ª—è —Å–ø–∏—Å–∫–∞ –∏–≥—Ä
        self.games_list_frame = tk.Frame(main_frame, width=250, bg=FRAME_BG_COLOR, relief="solid", borderwidth=1)
        self.games_list_frame.pack(side="left", fill="y", padx=(0, 10))
        # self.games_list_frame.pack_propagate(False) # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º –∏–ª–∏ —É–¥–∞–ª–∏–º, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –Ω–µ –≤–ª–∏—è–ª–∞ –Ω–∞ —Ä–∞–∑–º–µ—Ä —Å–ø–∏—Å–∫–∞
        
        tk.Label(
            self.games_list_frame,
            text="–ò–≥—Ä—ã:",
            font=(FONT_FAMILY_MAIN, FONT_SIZE_MEDIUM, FONT_BOLD),
            bg=FRAME_BG_COLOR,
            fg=TEXT_COLOR
        ).pack(pady=10, padx=10, anchor="w")

        # –§—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏–≥—Ä, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –±—ã–ª–∞ –æ—Ç–¥–µ–ª—å–Ω–æ –≤–Ω–∏–∑—É
        self.game_buttons_frame = tk.Frame(self.games_list_frame, bg=FRAME_BG_COLOR)
        self.game_buttons_frame.pack(fill="x", expand=False) # expand=False —á—Ç–æ–±—ã –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–ª—Å—è

        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        exit_button = tk.Button(
            self.games_list_frame,
            text="–í—ã—Ö–æ–¥",
            command=self.root.destroy,
            **self.exit_button_style
        )
        exit_button.pack(side="bottom", pady=(1,10), padx=10, fill="x") # –ù–∏–∂–Ω–∏–π –æ—Ç—Å—Ç—É–ø 10, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–∏–ª–∏–ø–∞–ª–∞ –∫ –∫—Ä–∞—é

        # –ö–Ω–æ–ø–∫–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ (—Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –≤—ã—à–µ –∫–Ω–æ–ø–∫–∏ –í—ã—Ö–æ–¥)
        support_button = tk.Button(
            self.games_list_frame,
            text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞",
            command=self.open_support_chat,
            **self.support_button_style
        )
        support_button.pack(side="bottom", pady=(1,1), padx=10, fill="x")

        # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ" (–≤—ã—à–µ –∫–Ω–æ–ø–∫–∏ –ü–æ–¥–¥–µ—Ä–∂–∫–∞)
        about_button = tk.Button(
            self.games_list_frame,
            text="–û –ø—Ä–æ–≥—Ä–∞–º–º–µ",
            command=self.show_about_info,
            **self.about_button_style
        )
        about_button.pack(side="bottom", pady=(10,1), padx=10, fill="x") # –û—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É 10, —Å–Ω–∏–∑—É 1

        # –ü—Ä–∞–≤—ã–π —Ñ—Ä–µ–π–º –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –∏–≥—Ä—ã
        self.details_frame = tk.Frame(main_frame, bg=FRAME_BG_COLOR, relief="solid", borderwidth=1)
        self.details_frame.pack(side="right", fill="both", expand=True)

        # --- –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä ---
        for game_info in GAMES:
            icon_image = None 
            icon_path_from_config = game_info.get("icon_path")
            print(f"\n[INFO] –í–µ—Ä—Å–∏—è Pillow: {PILLOW_VERSION}")
            print(f"\n[–ò–ì–†–ê: {game_info['name']}] –û–±—Ä–∞–±–æ—Ç–∫–∞ icon_path: '{icon_path_from_config}'")

            if icon_path_from_config:
                # –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å, –µ—Å–ª–∏ –∏–∫–æ–Ω–∫–∞ –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, —á—Ç–æ –∏ –ª–∞—É–Ω—á–µ—Ä
                # __file__ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª (launcher.py)
                # –ï—Å–ª–∏ icon_path_from_config –∞–±—Å–æ–ª—é—Ç–Ω—ã–π, os.path.join –µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç.
                # –ï—Å–ª–∏ –æ–Ω –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π, –æ–Ω –±—É–¥–µ—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π —Å–∫—Ä–∏–ø—Ç–∞.
                # –ü–æ—Å–∫–æ–ª—å–∫—É –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –≤ icon_path, –º—ã –º–æ–∂–µ–º –µ–≥–æ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å
                # –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é. –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –ø—É—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞.
                
                # –®–∞–≥ 1: –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—É—Ç—å, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                normalized_path_from_config = os.path.normpath(icon_path_from_config)
                print(f"  –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π icon_path –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞: '{normalized_path_from_config}'")

                # –®–∞–≥ 2: –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—É—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω—ã–º. –ï—Å–ª–∏ –Ω–µ—Ç, –¥–µ–ª–∞–µ–º –µ–≥–æ –∞–±—Å–æ–ª—é—Ç–Ω—ã–º.
                if os.path.isabs(normalized_path_from_config):
                    actual_path_to_check = normalized_path_from_config
                else:
                    # –ï—Å–ª–∏ –ø—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π, –æ–Ω –±—É–¥–µ—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞
                    current_script_dir = os.path.dirname(os.path.abspath(__file__))
                    actual_path_to_check = os.path.join(current_script_dir, normalized_path_from_config)
                    actual_path_to_check = os.path.normpath(actual_path_to_check) # –ï—â–µ —Ä–∞–∑ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø–æ—Å–ª–µ join

                print(f"  –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã–π –ê–ë–°–û–õ–Æ–¢–ù–´–ô –ø—É—Ç—å –∫ –∏–∫–æ–Ω–∫–µ: '{actual_path_to_check}'")

                if os.path.exists(actual_path_to_check):
                    print(f"  –§–∞–π–ª –∏–∫–æ–Ω–∫–∏ –ù–ê–ô–î–ï–ù –ø–æ –ø—É—Ç–∏: '{actual_path_to_check}'")
                    try:
                        pil_image = Image.open(actual_path_to_check)
                        print(f"  Pillow Image.open –£–°–ü–ï–®–ù–û. –û–±—ä–µ–∫—Ç: {pil_image}")
                        print(f"    –†–∞–∑–º–µ—Ä: {pil_image.size}, –§–æ—Ä–º–∞—Ç: {pil_image.format}, –†–µ–∂–∏–º: {pil_image.mode}")
                        # –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–æ 32x32 –ø–∏–∫—Å–µ–ª–µ–π:
                        # pil_image = pil_image.resize((32, 32), Image.Resampling.LANCZOS)
                        # print(f"  Pillow Image –ø–æ—Å–ª–µ resize (–µ—Å–ª–∏ –±—ã–ª–æ). –†–∞–∑–º–µ—Ä: {pil_image.size}")
                        icon_image = ImageTk.PhotoImage(pil_image)
                        print(f"  ImageTk.PhotoImage –£–°–ü–ï–®–ù–û. –û–±—ä–µ–∫—Ç: {icon_image}")
                    except Exception as e: # –õ–æ–≤–∏–º –±–æ–ª–µ–µ –æ–±—â–∏–µ –æ—à–∏–±–∫–∏, –≤–∫–ª—é—á–∞—è –æ—à–∏–±–∫–∏ Pillow
                        print(f"  [–û–®–ò–ë–ö–ê –ó–ê–ì–†–£–ó–ö–ò –ò–ö–û–ù–ö–ò] –ü—É—Ç—å: {actual_path_to_check}. –û—à–∏–±–∫–∞: {e}")
                        icon_image = None
                else:
                    print(f"  [–§–ê–ô–õ –ò–ö–û–ù–ö–ò –ù–ï –ù–ê–ô–î–ï–ù] –ø–æ –ø—É—Ç–∏: '{actual_path_to_check}'")
                    icon_image = None
            else:
                print(f"  icon_path –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∏–≥—Ä—ã '{game_info['name']}'.")

            print(f"  –ü–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –∫–Ω–æ–ø–∫–∏, icon_image: {icon_image}")
            btn = tk.Button(
                self.game_buttons_frame, # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–≥—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ—Ä–µ–π–º
                text=game_info["name"],
                image=icon_image, # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∫–æ–Ω–∫—É
                **self.button_style, # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª—å
                command=lambda gi=game_info: self.show_game_details(gi)
            )
            if icon_image: # –í–∞–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!
                btn.image = icon_image
            btn.pack(pady=3, padx=10, fill="x") # –£–≤–µ–ª–∏—á–∏–ª padx –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–∏–¥–∞ —Å –∏–∫–æ–Ω–∫–æ–π

        # --- –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –ø–∞–Ω–µ–ª–∏ –¥–µ—Ç–∞–ª–µ–π (–±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è) ---
        self.cover_label = tk.Label(
            self.details_frame, text="–û–±–ª–æ–∂–∫–∞ –∏–≥—Ä—ã",
            font=(FONT_FAMILY_MAIN, FONT_SIZE_MEDIUM),
            bg="#334B61", fg=TEXT_COLOR,  # –¢–µ–º–Ω–µ–µ —Ñ–æ–Ω –¥–ª—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞ –æ–±–ª–æ–∂–∫–∏
            relief="solid", borderwidth=1 # –£–±—Ä–∞–Ω—ã —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ height –∏ width
        )
        self.cover_label.pack(pady=20, padx=20)

        self.game_title_label = tk.Label(
            self.details_frame, text="–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã",
            font=(FONT_FAMILY_MAIN, FONT_SIZE_LARGE, FONT_BOLD),
            bg=FRAME_BG_COLOR, fg=ACCENT_COLOR
        )
        self.game_title_label.pack(pady=(0,10))

        self.game_description_text = tk.Label(
            self.details_frame, text="–û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã...",
            font=(FONT_FAMILY_MAIN, FONT_SIZE_NORMAL),
            bg=FRAME_BG_COLOR, fg=TEXT_COLOR,
            wraplength=450, justify="left"
        )
        self.game_description_text.pack(pady=10, fill="x", padx=20)

        self.launch_button = tk.Button(self.details_frame, text="–ó–ê–ü–£–°–¢–ò–¢–¨", state="disabled", **self.launch_button_style)
        self.launch_button.pack(pady=20)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–≤–æ–π –∏–≥—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç
        if GAMES:
            self.show_game_details(GAMES[0])
        else:
            self.game_title_label.config(text="–ù–µ—Ç –∏–≥—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")

    def show_game_details(self, game_info):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø–∞–Ω–µ–ª—å –¥–µ—Ç–∞–ª–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–≥—Ä–µ."""
        self.current_game_path = game_info["path"]
        self.current_game_name = game_info["name"]

        self.game_title_label.config(text=game_info["name"])
        self.game_description_text.config(text=game_info.get("description", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."))

        # --- –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏ ---
        cover_path_from_config = game_info.get("cover_path")
        loaded_cover_image = None

        if cover_path_from_config:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –æ–±–ª–æ–∂–∫–µ
            if os.path.isabs(cover_path_from_config):
                actual_cover_path = os.path.normpath(cover_path_from_config)
            else:
                # –ï—Å–ª–∏ –ø—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π, –æ–Ω –±—É–¥–µ—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞
                current_script_dir = os.path.dirname(os.path.abspath(__file__))
                actual_cover_path = os.path.join(current_script_dir, cover_path_from_config)
                actual_cover_path = os.path.normpath(actual_cover_path) # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø–æ—Å–ª–µ join

            self.log_message(f"  [–û–ë–õ–û–ñ–ö–ê] –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑: '{actual_cover_path}'")

            if os.path.exists(actual_cover_path):
                try:
                    pil_image = Image.open(actual_cover_path)
                    # --- –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–±–ª–æ–∂–∫–∏ ---
                    # –£–≤–µ–ª–∏—á–∏–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π —Ä–∞–∑–º–µ—Ä –æ–±–ª–æ–∂–∫–∏ (–±—ã–ª–æ 60)
                    desired_width = 280 # –ù–æ–≤–∞—è —à–∏—Ä–∏–Ω–∞ –æ–±–ª–æ–∂–∫–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
                    aspect_ratio = pil_image.height / pil_image.width
                    desired_height = int(desired_width * aspect_ratio)
                    pil_image = pil_image.resize((desired_width, desired_height), Image.Resampling.LANCZOS)
                    self.log_message(f"    –†–∞–∑–º–µ—Ä –æ–±–ª–æ–∂–∫–∏ –ø–æ—Å–ª–µ resize: {pil_image.size}")
                    # --- –ö–æ–Ω–µ—Ü –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ ---
                    loaded_cover_image = ImageTk.PhotoImage(pil_image)
                    self.log_message(f"    –û–±–ª–æ–∂–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {pil_image}")
                except Exception as e:
                    self.log_message(f"  [–û–®–ò–ë–ö–ê –ó–ê–ì–†–£–ó–ö–ò –û–ë–õ–û–ñ–ö–ò] –ü—É—Ç—å: {actual_cover_path}. –û—à–∏–±–∫–∞: {e}")
                    loaded_cover_image = None
            else:
                self.log_message(f"  [–§–ê–ô–õ –û–ë–õ–û–ñ–ö–ò –ù–ï –ù–ê–ô–î–ï–ù] –ø–æ –ø—É—Ç–∏: {actual_cover_path}")
        else:
            self.log_message(f"  cover_path –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∏–≥—Ä—ã '{game_info['name']}'.")

        if loaded_cover_image:
            self.cover_label.config(image=loaded_cover_image, text="") # –£–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∞
            self.cover_label.image = loaded_cover_image # –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!
        else:
            # –ï—Å–ª–∏ –æ–±–ª–æ–∂–∫–∏ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç-–∑–∞–≥–ª—É—à–∫—É
            self.cover_label.config(image="", text=f"–û–±–ª–æ–∂–∫–∞ –¥–ª—è\n{game_info['name']}")
            self.cover_label.image = None # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É, –µ—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–µ—Ç
            
        self.launch_button.config(state="normal", command=self.launch_current_game)

    def launch_current_game(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—Ç–æ—Ä–æ–π —Å–µ–π—á–∞—Å –Ω–∞ –ø–∞–Ω–µ–ª–∏ –¥–µ—Ç–∞–ª–µ–π."""
        if not hasattr(self, 'current_game_path') or not self.current_game_path:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ò–≥—Ä–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –∏–ª–∏ –ø—É—Ç—å –Ω–µ —É–∫–∞–∑–∞–Ω.")
            return

        game_name_to_launch = self.current_game_name
        game_path_from_config = self.current_game_path

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–≥—Ä—ã
        if not os.path.isabs(game_path_from_config):
            current_script_dir = os.path.dirname(os.path.abspath(__file__))
            absolute_game_path = os.path.normpath(os.path.join(current_script_dir, game_path_from_config))
        else:
            absolute_game_path = os.path.normpath(game_path_from_config)

        self.log_message(f"–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞: {game_name_to_launch} (–ö–æ–Ω—Ñ–∏–≥: '{game_path_from_config}', –ê–±—Å–æ–ª—é—Ç–Ω—ã–π: '{absolute_game_path}')")
        try:
            if not os.path.exists(absolute_game_path):
                messagebox.showerror("–û—à–∏–±–∫–∞ –ó–∞–ø—É—Å–∫–∞", f"–§–∞–π–ª –¥–ª—è –∏–≥—Ä—ã '{game_name_to_launch}' –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏:\n{absolute_game_path}")
                self.log_message(f"–û—à–∏–±–∫–∞: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω - {absolute_game_path}")
                return
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫ –∑–∞–ø—É—Å–∫–∞—Ç—å –∏–≥—Ä—É
            if absolute_game_path.lower().endswith(".py"):
                # –ó–∞–ø—É—Å–∫–∞–µ–º .py —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä Python
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é (cwd) –≤ –ø–∞–ø–∫—É, –≥–¥–µ –ª–µ–∂–∏—Ç —Å–∞–º —Å–∫—Ä–∏–ø—Ç –∏–≥—Ä—ã.
                game_script_directory = os.path.dirname(absolute_game_path)
                subprocess.Popen([sys.executable, absolute_game_path], cwd=game_script_directory)
            else:
                subprocess.Popen(absolute_game_path) # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
            self.log_message(f"–ò–≥—Ä–∞ '{game_name_to_launch}' —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞.")
        except OSError as e:
            messagebox.showerror("–û—à–∏–±–∫–∞ –ó–∞–ø—É—Å–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É '{game_name_to_launch}'.\n–û—à–∏–±–∫–∞: {e}")
            self.log_message(f"OSError –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ {game_name_to_launch}: {e}")
        except Exception as e:
            messagebox.showerror("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –û—à–∏–±–∫–∞", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ '{game_name_to_launch}'.\n–û—à–∏–±–∫–∞: {e}")
            self.log_message(f"Exception –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ {game_name_to_launch}: {e}")

    def log_message(self, message):
        print(f"[–õ–∞—É–Ω—á–µ—Ä] {message}")

    def open_support_chat(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ."""
        support_url = "https://t.me/turkell" 
        self.log_message(f"–û—Ç–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏: {support_url}")
        webbrowser.open_new_tab(support_url)

    def show_about_info(self):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ–∫–Ω–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ."""
        about_window = tk.Toplevel(self.root)
        about_window.title("–û –ø—Ä–æ–≥—Ä–∞–º–º–µ")
        about_window.configure(bg=FRAME_BG_COLOR)
        about_window.resizable(False, False)

        # –ó–∞–¥–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞ –ø–µ—Ä–µ–¥ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        window_width = 450
        window_height = 800 # –ù–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–º –≤—ã—Å–æ—Ç—É –¥–ª—è –±–æ–ª—å—à–µ–≥–æ —Ç–µ–∫—Å—Ç–∞

        # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞ "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ" –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        self.root.update_idletasks() # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Ä–∞–∑–º–µ—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã
        root_x = self.root.winfo_x()
        root_y = self.root.winfo_y()
        root_width = self.root.winfo_width()
        root_height = self.root.winfo_height()

        x = root_x + (root_width // 2) - (window_width // 2)
        y = root_y + (root_height // 2) - (window_height // 2)
        about_window.geometry(f'{window_width}x{window_height}+{x}+{y}')

        about_window.transient(self.root) # –î–µ–ª–∞–µ—Ç –æ–∫–Ω–æ –º–æ–¥–∞–ª—å–Ω—ã–º –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É
        about_window.grab_set() # –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Å–æ–±—ã—Ç–∏—è

        info_frame = tk.Frame(about_window, bg=FRAME_BG_COLOR, padx=20, pady=20)
        info_frame.pack(expand=True, fill="both")

        title_label = tk.Label(
            info_frame,
            text="Copy Steam",
            font=(FONT_FAMILY_MAIN, FONT_SIZE_LARGE, FONT_BOLD),
            bg=FRAME_BG_COLOR,
            fg=ACCENT_COLOR
        )
        title_label.pack(pady=(0, 15))

        info_text_content = [
            ("–í–µ—Ä—Å–∏—è:", "0.1.0"),
            ("–°–æ–∑–¥–∞—Ç–µ–ª–∏:", "Jegor Samsonov \nEduard Garusov "),
            ("–û–ø–∏—Å–∞–Ω–∏–µ:", "–≠—Ç–æ—Ç –∏–≥—Ä–æ–≤–æ–π –ª–∞—É–Ω—á–µ—Ä –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —É–¥–æ–±–Ω–æ–≥–æ –∏ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –º–∏–Ω–∏-–∏–≥—Ä."),
            ("–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:", "Python 3, Tkinter, Pillow"),
            ("–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:", "- –ó–∞–ø—É—Å–∫ –∏–≥—Ä –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º\n- –ü—Ä–æ—Å–º–æ—Ç—Ä –æ–ø–∏—Å–∞–Ω–∏–π –∏ –æ–±–ª–æ–∂–µ–∫\n- –°—Ç–∏–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω, –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∏–∑–≤–µ—Å—Ç–Ω—ã–º –ª–∞—É–Ω—á–µ—Ä–æ–º Steam"),
            ("–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏:", "–û—Å–æ–±–∞—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –≤—Å–µ–º, –∫—Ç–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏, –ø—Ä–µ–¥–ª–∞–≥–∞–ª –∏–¥–µ–∏ –∏ –æ–∫–∞–∑—ã–≤–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏."),
            ("–ù–∞—á–∞–ª–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:", "01.06.2025"),
            ("–†–µ–ª–∏–∑:", "–•–•.–•–•.–•–•–•–•")
        ]

        for header, text in info_text_content:
            header_label = tk.Label(
                info_frame, text=header, font=(FONT_FAMILY_MAIN, FONT_SIZE_NORMAL, FONT_BOLD),
                bg=FRAME_BG_COLOR, fg=TEXT_COLOR, anchor="nw", justify="left"
            )
            header_label.pack(fill="x", pady=(7,0))

            text_label = tk.Label(
                info_frame, text=text, font=(FONT_FAMILY_MAIN, FONT_SIZE_NORMAL),
                bg=FRAME_BG_COLOR, fg=TEXT_COLOR, wraplength=380,
                anchor="nw", justify="left"
            )
            text_label.pack(fill="x", pady=(0,10))

        close_button = tk.Button(
            info_frame, text="–ó–∞–∫—Ä—ã—Ç—å", command=about_window.destroy,
            font=(FONT_FAMILY_MAIN, FONT_SIZE_NORMAL), bg=BUTTON_BG_COLOR, fg=BUTTON_FG_COLOR,
            activebackground=BUTTON_ACTIVE_BG_COLOR, relief="flat", width=10
        )
        close_button.pack(pady=(20,0))



root_window = tk.Tk()
app = GameLauncherApp(root_window)
root_window.mainloop()